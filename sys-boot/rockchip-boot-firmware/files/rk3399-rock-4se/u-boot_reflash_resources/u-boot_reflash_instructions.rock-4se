
To re-flash u-boot on your boot device, with the u-boot image compiled for the current build,
follow these instructions, based on armbian's platform_install.sh which can be found in
u-boot_reflash_resources/usr/lib/u-boot/  --

    # (as root) *** note: this u-boot-rockchip.bin method did not work as of 27 Sep 25 ***
    cd /path/to/linux-u-boot-current-rock-4se/
    target=<devicename>
    dd if=u-boot-rockchip.bin of=${target} bs=32k seek=1 conv=notrunc status=none

There is no SPI-NOR flash device (MTD) on the rock-4se, so the rkspi_loader.img file cannot
be loaded to MTD

    # **Work-around** alternative (as root)
    # (using usr_rk3399-rock-pi-4c-plus_u-boot_bootloader_files)
    cd /path/to/linux-u-boot-current-rockpi-4cplus/
    target=<devicename>
    dd if=idbloader.img of=${target} seek=64 conv=notrunc status=none;
    dd if=u-boot.itb of=${target} seek=16384 conv=notrunc status=none;

A further alternative is to boot from the Armbian image (assuming you can boot one) on an SD card and run

Notes:
(0) (As of 27 Set 2025) The primary procedure above was tested and did NOT work for rk3399-rock-4se.
As a work-around, the rk3399-rock-pi-4c-plus u-boot bootloader was used instead and it DOES work

(1) Be sure to replace <devicename> with the correct device, e.g. /dev/mmcblk1

(2) u-boot (2016.9+) assigns mmcblk0 to whatever device u-boot is loaded from
 
(3) You can also re-compile u-boot from scratch, or you can (re)configure it during
armbian/build with  ./compile.sh uboot-config and then ./compile.sh uboot

(4) First partition should start at sector 32768, to leave room for u-boot image written
    with this method.  For example, see this layout

#-----[ joetoo layout (build as chroot on radxa debian) ]---------------------------------------
# rock4se6401 ~ # lsblk   ## as of (27 Sep 2025)
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
mmcblk1     179:0    0 58.3G  0 disk 
`-mmcblk1p1 179:1    0 58.3G  0 part /
# rock4se6401 ~ # fdisk -l /dev/mmcblk1
Disk /dev/mmcblk1: 58.27 GiB, 62562238464 bytes, 122191872 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xbb71bc1e

Device         Boot Start       End   Sectors  Size Id Type
/dev/mmcblk1p1 *    32768 122191871 122159104 58.3G 83 Linux
#-----------------------------------------------------------------
# for reference information only -- radxa debian layout (systemd)
# rock-4se / # lsblk   ## as of (27 Sep 2025)
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
mmcblk1     179:0    0 28.9G  0 disk 
|-mmcblk1p1 179:1    0   16M  0 part /config       # (empty but could enable boot-time config scripts)
|-mmcblk1p2 179:2    0  300M  0 part /boot/efi     # (empty but could be systemd ESP)
`-mmcblk1p3 179:3    0 28.5G  0 part /
zram0       254:0    0  1.9G  0 disk [SWAP]
