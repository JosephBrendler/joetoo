#!/bin/bash
source /usr/local/sbin/script_header_brendlefly
BUILD="0.001b 180928"
SYS_DATE="$(my_date)"
logFile="/home/joe/xdotool_close_windows.log"
let count=0
let dec=0
let hex=0x0
found="false"
let h_offset=20
let v_offset=10
let width=800
let height=950
sleepWait=0.1
DEBUG="true"
#DEBUG="false"

exec 6>&1 2>/dev/null           # Link file descriptor #6 with stdout. Saves stdout.
exec > $logFile  2>/dev/null    # stdout replaced with file.
# ----------------------------------------------------------- #
# All output from commands in this block sent to file $logFile
separator "xdotool_close_windows"
message "Exterminating any rogue xdotool_xxx process..."
pids=($(ps -aef | grep xdotool_ | grep -v 'color=auto' | grep -v $! | awk '{print $2}'))
message "Found ${#pids[@]} xdotool_xxx processes..."
for x in ${pids}
do
  message "killing process x=${x}"
  kill -9 $x 2>/dev/null
done
x=""

message "Now closing terminal windows..."
num_desktops=$(xdotool get_num_desktops)
message "num_desktops: $num_desktops"

window_list=($(xdotool search --any lxterminal 2>/dev/null))
#window_list+=($(xdotool search --any Konsole))
window_list+=($(xdotool search --any UXTerm 2>/dev/null))
message "Closing the following windows:"
echo ${window_list[@]}
for win in ${window_list[@]}
do
  desktop=$(xdotool get_desktop_for_window $win 2>/dev/null)
  message_n "Examining window [ $win ] on desktop [ $desktop ] ... "
  if [[ $desktop -gt -1 ]]
  then
#    xdotool windowkill $win 2>/dev/null && echo "killed" || echo "tried, but failed to kill"
    xdotool windowclose $win 2>/dev/null && echo "closed" || echo "tried, but failed to close"
  else
    echo "not > -1; skipping"
  fi
#  xdotool windowclose $win
  sleep $sleepWait
done

exec 1>&6 6>&-  2>/dev/null     # Restore stdout and close file descriptor #6.

cat $logFile
